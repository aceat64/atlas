[project]
name = "atlas"
version = "0.1.0"
description = "All-media Tracking & Library Access System"
authors = [{ name = "Andrew LeCody" }]
readme = "DOCS.md"
requires-python = ">=3.13,<3.14"
dependencies = [
    "aioboto3>=14.1.0",
    "alembic>=1.14.1",
    "asgi-correlation-id>=4.3.4",
    "fastapi-pagination>=0.12.34",
    "fastapi[standard]>=0.115.11,<0.116.0",
    "httpx>=0.28.1",
    "opentelemetry-distro==0.53b1",
    "opentelemetry-exporter-otlp>=1.31.1",
    "opentelemetry-instrumentation-aiohttp-client==0.53b1",
    "opentelemetry-instrumentation-aiohttp-server==0.53b1",
    "opentelemetry-instrumentation-asyncio==0.53b1",
    "opentelemetry-instrumentation-boto3sqs==0.53b1",
    "opentelemetry-instrumentation-botocore==0.53b1",
    "opentelemetry-instrumentation-click==0.53b1",
    "opentelemetry-instrumentation-dbapi==0.53b1",
    "opentelemetry-instrumentation-fastapi==0.53b1",
    "opentelemetry-instrumentation-grpc==0.53b1",
    "opentelemetry-instrumentation-httpx==0.53b1",
    "opentelemetry-instrumentation-jinja2==0.53b1",
    "opentelemetry-instrumentation-logging==0.53b1",
    "opentelemetry-instrumentation-psycopg==0.53b1",
    "opentelemetry-instrumentation-requests==0.53b1",
    "opentelemetry-instrumentation-sqlalchemy==0.53b1",
    "opentelemetry-instrumentation-sqlite3==0.53b1",
    "opentelemetry-instrumentation-starlette==0.53b1",
    "opentelemetry-instrumentation-threading==0.53b1",
    "opentelemetry-instrumentation-tortoiseorm==0.53b1",
    "opentelemetry-instrumentation-urllib==0.53b1",
    "opentelemetry-instrumentation-urllib3==0.53b1",
    "opentelemetry-instrumentation-wsgi==0.53b1",
    "psycopg[binary]>=3.2.5",
    "pydantic>=2.11.4",
    "pydantic-settings>=2.8.1",
    "pyhumps>=3.8.0",
    "pyjwt[crypto]>=2.10.1",
    "sqlalchemy[asyncio]>=2.0.38",
    "sqlmodel>=0.0.24",
    "structlog>=25.3.0",
]

[dependency-groups]
dev = [
    "coverage>=7.6.12",
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "ruff>=0.9.9",
]

[project.scripts]
atlas-cli = "cli.main:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.mypy]
strict = true
exclude = ["venv", ".venv"]
plugins = ["pydantic.mypy"]
enable_error_code = ["deprecated", "unreachable", "no-any-unimported", "redundant-self"]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # eradicate
    "ERA",
    # FastAPI
    "FAST",
    # Ruff-specific rules
    "RUF",
    # flake8-async
    "ASYNC",
]
