"""initial tables

Revision ID: ac7dc3ef0a29
Revises: 
Create Date: 2025-03-13 13:41:33.168558

"""
# mypy: disallow_untyped_calls=False

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ac7dc3ef0a29'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collection',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('annotations', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('id', sa.Integer(), sa.Identity(always=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('room',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('annotations', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('id', sa.Integer(), sa.Identity(always=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), sa.Identity(always=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('id', sa.Integer(), sa.Identity(always=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stack',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('annotations', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('id', sa.Integer(), sa.Identity(always=True), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('item_type', sa.Enum('book', 'magazine', 'illustration', 'movie', 'tv_show', 'map', name='itemtype'), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.Column('stack_id', sa.Integer(), nullable=True),
    sa.Column('shelf', sa.Integer(), nullable=True),
    sa.Column('slot', sa.Integer(), nullable=True),
    sa.Column('annotations', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('id', sa.Integer(), sa.Identity(always=True), nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['stack_id'], ['stack.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attachment',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('filesize', sa.Integer(), nullable=False),
    sa.Column('checksum_sha256', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), sa.Identity(always=True), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('itemtaglink',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('item_id', 'tag_id'),
    sa.UniqueConstraint('item_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('itemtaglink')
    op.drop_table('attachment')
    op.drop_table('item')
    op.drop_table('stack')
    op.drop_table('user')
    op.drop_table('tag')
    op.drop_table('room')
    op.drop_table('collection')
    # ### end Alembic commands ###
